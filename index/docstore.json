{"docstore/data": {"a37a542d-341c-4467-8c66-f2a8f1e1b3b1": {"__data__": {"id_": "a37a542d-341c-4467-8c66-f2a8f1e1b3b1", "embedding": null, "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf024929-1f38-412e-a785-d51738b060da", "node_type": "4", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "1f3325f226dff4ac8184fc331b748e6cec0143d4505d6e76a46a7f1e2ccca4f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a62ef461-d24f-4306-a2b9-d0a3fa446a65", "node_type": "1", "metadata": {}, "hash": "122be139bf73663b593afaba3629e9c41469a98d18bf78851513a5651a75ac5d", "class_name": "RelatedNodeInfo"}}, "text": "When I was an entrepreneur about a decade ago, I landed on a golden use case (or so I fantasised). It is to apply Natural Language Processing (NLP) to convert english statements into structured facts (Subject-Predicate-Object) that adhere to commonly-agreed Domain Ontologies. For example, \u201cSingapore\u2019s economic inflation is estimated at 4.5%\u201d can be expressed as a triple with Singapore as the subject, 4.5 as the object and has_inflation as the predicate (semantic relatioship). All the Subjects, Objects and Predicates can be expressed as unique URIs so that the knowledge across millions of triples describing different aspects of the same subjects and objects can be stictched together. Such fact triples can be loaded onto Semantic Datastores (RDF or Property-Graph based) and queried, again by the same natural language processing capability. Even more so, these triples can be crunched by inferencing engines to derive semantically sound new knowledge and can reason these derivations in reverse too. The ultimate thinking machine! or so I fantasised.\n\nWhy this seemingly round-about approach to create a thinking machine as against the generative AI\u2019s approach of predicting word-sequences? Why convert unstructured English to structured facts before processing it for an answer? And are there any other alternative approaches to creating thinking machines? Strangely, I have not heard much balanced critical opinions from contemporary computing historians or philosophers on this subject ever since LLMs were made public. It could also be that I am living under a certain other rock but all I hear is the whole industry monomaniacally adulating the genAI\u2019s auto-regressive model, bullishly sidelining any reasonable criticisms. To correctly quantify the pleasantly surprising merits and some devastating demerits, we need to philosophically ponder on the humanity\u2019s past quests on this matter and re-learn from it. With the very little that I have learned about this vast history, I will try and categorise the different schools of thoughts that existed and evolved this field. If you are a sincere seeker, you may stitch the story also, starting with Aristotle and traversing all the way through the history of first order logic, inferencing, mathematical induction, Descartes, George Boole, Gottlob Frege, David Hilbert etc.\n\nHere is my version:\n\nFrom 300BCE and all through the history, philosophers and mathematicians wanted a better alternative to the rhetorical approach to thinking and exploring truths. They audaciously believed that by using all the existing axioms and a set of inference rules, one can systematically work out all possible truths in the world. For this to happen, we needed a formal language using symbols and a grammar to represent axioms(ex. \u2200x,Fruit(x)\u21d2Tasty(x)) and a set of inference rules to manipulate the symbols to create new axioms. In the early 20th century, several mathematicians and logicians, including Frege, Bertrand Russell, Whitehead, David Hilbert made significant contributions to this goal. Turing further took this dream to a possible promise of automating this process. Imagine a machine that endlessly manipulates symbols based on formal reasoning rules and derives all possible truths that you can trust! Here, we have our first school of thought and lets call this the \u201cthinking = symbol manipulation\u201d school. Apologies for shrinking this amazing history to a few lines for the sake of brevity but if you are an aficionado, we should connect :)\n\nThere was a brief period of time where the likes of Godel threw a spanner at the first school of thought. They did land on something that is correct with the incompleteness theorem. Basically, in a formal system that was proposed by the likes of Hilbert, every axiom (existing and derived) must be provable. That is the mandatory completeness requirement. With mathematical rigour, Godel proved that given any formal system, there would still be axioms that can not be provable. This shook the foundation of maths and we still feel the tremors caused by this. The eastern mystics have proposed the same theory centuries ago, calling it mayavada (the doctrine of illusion). For the sake of categorisation, let us call them the \u201cthinking = (futile) illusion\u201d school. Although this is profound, we don\u2019t know how to handle this knowledge. So we conveniently parked it and went ahead on the legacy of Hilbert by inventing programming languages (like Prolog) and incessantly kept building symbol manipulating expert systems.\n\nAt least until the AI Winter.\n\nThe AI winter(s) did not happen suddenly. There were some radical voices that predicted it like that of Hubert Dreyfus. They theorised that the magical activities like object recognition are not symbol manipulation problems. These are perhaps pattern matching problems. So here is our third category and lets call them the \u201cthinking = pattern sifting\u201d school. Thanks to them, we learnt that we can\u2019t solve a problem of recognising an object, say a chair, even if we write thousands of rules. (Although its a core component of intelligence, is recognition a sufficient capability to create thinking machines? Let us come back to this shortly)\n\nWhile progressing in parallel on the natural language processing frontier, we have recently landed on another possible solution to thinking machines \u2014 the LLMs. This is a variation of the pattern sifting approach, applied to word patterns in languages. By mastering the language syntax patterns sourced from an unlimited corpus and by using them as references to generate eloquent statements, these models seem to simulate thinking. This is the claim of the fourth school and lets call them the \u201cthinking = sequence transduction\u201d school. This also would mean that people perhaps are nothing but evolved sequence models.\n\nI am not going to dive into the second category for now. ", "start_char_idx": 0, "end_char_idx": 5883, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a62ef461-d24f-4306-a2b9-d0a3fa446a65": {"__data__": {"id_": "a62ef461-d24f-4306-a2b9-d0a3fa446a65", "embedding": null, "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf024929-1f38-412e-a785-d51738b060da", "node_type": "4", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "1f3325f226dff4ac8184fc331b748e6cec0143d4505d6e76a46a7f1e2ccca4f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a37a542d-341c-4467-8c66-f2a8f1e1b3b1", "node_type": "1", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "9c5e70545c65d4c8363a8b70e4f57431b76c252baec7aea3d6b6eaf0e3ef8181", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c728ca39-9028-4c9d-972f-ff80080fc9e5", "node_type": "1", "metadata": {}, "hash": "96528c36aa0fbcef25b67b1508aee8ec07c5fe4e2dd841ecf2aa166cea84d216", "class_name": "RelatedNodeInfo"}}, "text": "And the 3rd and the 4th are fundamentally similar in the approach. Therefore we can now reduce the categories into two to move forward \u2014 1/symbol manipulation and; 2/sequence transduction using pattern matching. Now, it is important to understand the limitations of both these approaches to avoid rude shocks. In the first symbol manipulation approach, the trouble is the knowledge engineering bottleneck. Until the system assembles a critical mass of axioms, it would not be useful. Humanly seeding such an axiom base has folded in the past (refer to Tim Berners Lee\u2019s earlier attempt at creating the Semantic Web). As a side story, I attempted to solve this problem using NLP to create the axioms as mentioned in the beginning of this article and could only achieve a limited success in a couple of narrow domains. The sequence transduction approach on the other hand lacks causality and it hallucinates. Both these are serious limitations. Those who know the math behind the LLMs understand how simple and dumb the structure of knowledge representation inside is and how challenging it would be to model chains of causes and effects. This is not a new problem. The linguists calls this Anaphora Resolution and it was recognised as the hard problem during the early NLP days itself.\n\nImagine a machine processing this statement \u2014 \u201cI went to the movies last night but the tickets were sold out\u201d. ", "start_char_idx": 5883, "end_char_idx": 7280, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c728ca39-9028-4c9d-972f-ff80080fc9e5": {"__data__": {"id_": "c728ca39-9028-4c9d-972f-ff80080fc9e5", "embedding": null, "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf024929-1f38-412e-a785-d51738b060da", "node_type": "4", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "1f3325f226dff4ac8184fc331b748e6cec0143d4505d6e76a46a7f1e2ccca4f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a62ef461-d24f-4306-a2b9-d0a3fa446a65", "node_type": "1", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "64b9205c08f9825f91a792636929604ece64a2d29112a8d194b729cbcb4b4782", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37871ead-d804-479d-9cac-44e08b9b54f7", "node_type": "1", "metadata": {}, "hash": "9d0910b25a61036d893f01f969cdbe23bfe29f0f8035656a4abc784c00e5ae32", "class_name": "RelatedNodeInfo"}}, "text": "The semantic link missing in this statement is that one needs to buy tickets to get access to the movies. This is one degree of causality. Humans maintain and process massive chains of causalities in our reasoning. Relating statistical correlation scores of n-grams appearing in sentences using multi-dimensional matrices fails in representing such rich semantic relationships. Now, where it becomes problematic is when LLMs makes up the best guess using the closest patterns when it can\u2019t find any tighter correlations. In strict mathematical terms, these are prediction errors but the industry chooses to call it as hallucination! When I was 6 years old, I was curious to find out how Nehru (the first Prime Minister of India) died. My uncle told me that Nehru got old, his eye-sight was so degraded that he fell in to a ditch while walking and died. Growing up in a god-forsaken rural part of the world, my uncle would have come across cases of old men going blind and dying in such unfortunate accidents. Although he did not have actual facts about Nehru\u2019s death, he had great language skills to spin compelling narratives and those closely matching patterns. The combination of these resulted in this hallucination (actually a lie?). As a 6 year old, I fell for that eloquence and completely trusted him. I narrated that \u2018fact\u2019\u2019 to my school teacher a few years down the line very confidently and the resultant awkward embarrassment stays with me forever. (Oh, Nehru died of heart failure while he was still a Prime Minister). Even a few days back, I was asking openAI to summarise a bunch of research papers for me. It gave me compelling answers that I fell for. When I read the actual papers later, I realised how completely wrong they were and felt like that same embarrassed and disappointed child.\n\nNow, I am not a bitter road block prophet here. All I want is for us to have a a deep understanding of what problems can and can-not be solved, given a particular approach. Event though sequence transduction approach has its flaws, it is a surprising, highly critical and a very useful milestone. We will learn from it, use this as a stepping stone and synthesise a new paradigm. I have some clues of that synthesis which I will discuss in the end. ", "start_char_idx": 7280, "end_char_idx": 9538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37871ead-d804-479d-9cac-44e08b9b54f7": {"__data__": {"id_": "37871ead-d804-479d-9cac-44e08b9b54f7", "embedding": null, "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf024929-1f38-412e-a785-d51738b060da", "node_type": "4", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "1f3325f226dff4ac8184fc331b748e6cec0143d4505d6e76a46a7f1e2ccca4f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c728ca39-9028-4c9d-972f-ff80080fc9e5", "node_type": "1", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "ff8b3c3cbbac16b253881c4538253c2cefefec23c1f196df621f802351b3ab95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16bea74e-d745-4385-8e93-ba81d97521ae", "node_type": "1", "metadata": {}, "hash": "fa5509214ae393feef74e710d4d2357fbad622128a7f8a38a777a3452bf181be", "class_name": "RelatedNodeInfo"}}, "text": "Before that, I want to dive into making this article a little more contextual for developers. My current job scope is to augment developer productivity and in that scope, code generation using GenAI is an important weapon in any developers\u2019 armoury. And we developers need to know when and where to apply this technology safely!\n\nBack to the 2 challenges of hallucination and lacking causality, the first problem is easy in the development domain. The generated code from the models can be easily fact checked \u2014 one just have to execute them. That is not hard. Most boiler plate codes have been working well in my tests. The hallucination flaws start to appear when you prompt for the not-so-common patterns (ex. generate a neural net algorithm for x inputs, y hidden nodes, z outputs using a certain activation function). In general application development, such requirements are rare and therefore, using the models to generate the codes do result in 50%+ productivity. The causality challenge is the worst one. In programming, often the decisions made at one part of the code will have multiple hops of connections to the rest. Imagine a state stored in a data member in an object that needs to be reset before a common algorithm in a method is executed. If the developer misses that (the cause) the program spits out bad results (the effect). If such a code is given to the generative models and asked for recommendations to fix it, they predictably struggle all the time. That is the hypothesis and we need to validate this to declare this as the challenging anti-pattern for applying generative models in programming.\n\nTo prove the hypothesis, I took the case of coding a neural network itself. There is a poetic beauty in this scenario \u2014 to get a neural network (GenAI) to produce or fix another neural network. Self Replicating Machines, Wow ! To keep the problem simple, I coded the 2 hidden node network from a Josh Starmer video (btw, if you want to refresh the ML foundations, Josh has an amazingly intuitive guide).\n\nI purposefully avoided using the matrices and dot products so that I can create the problem scenario. This is the faulty code that will not converge after back propagation, despite any epoch size.\n\nI have coded a piece of langchain client that will invoke OpenAI APIs to get a recommended fix for this code. ", "start_char_idx": 9538, "end_char_idx": 11876, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "16bea74e-d745-4385-8e93-ba81d97521ae": {"__data__": {"id_": "16bea74e-d745-4385-8e93-ba81d97521ae", "embedding": null, "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf024929-1f38-412e-a785-d51738b060da", "node_type": "4", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "1f3325f226dff4ac8184fc331b748e6cec0143d4505d6e76a46a7f1e2ccca4f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37871ead-d804-479d-9cac-44e08b9b54f7", "node_type": "1", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "57d07b87d9dd8c4753f6201ac87f2c4bd8d2d3d7c4b509bd25e4af5edb131e86", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f369d03-c56c-409f-bc94-b4583df37422", "node_type": "1", "metadata": {}, "hash": "c28aa8415519db0df523ac8a17a678789739b1f54716b35d80c6e5e1211c50e9", "class_name": "RelatedNodeInfo"}}, "text": "You may clone my github repo to execute this yourself. Set your OpenAI api key in OPENAI_API_KEY environment variable.\n\nAs expected, the program did not work with all the fixes recommended by the model. The trained weights and biases did not converge with the minimal loss value. Some of the fixes given were just redundant distractions. The model did pick up the error in derivate computation formulas for the weights as this pattern usually is directly present in the codes used during training. It is nice but I did expect that. But the model could not pick up the blunder of not resetting the predicted score variable from the previous epoch during forward propagation (cause-and-effect challenge). There are numerous manifestations of such cause-and-effect patterns that occur in general programming where the machines will struggle predictably. I will document all those moving forward so that we developers are aware of the pitfalls and we get a better experience from this otherwise amazing companion.\n\nNow to the conclusion. As the old aphorism goes, all models are wrong; and some are useful. The sequence transduction approach suffers from the limitations of the rudimentary knowledge representation mechanism. ", "start_char_idx": 11876, "end_char_idx": 13098, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f369d03-c56c-409f-bc94-b4583df37422": {"__data__": {"id_": "3f369d03-c56c-409f-bc94-b4583df37422", "embedding": null, "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf024929-1f38-412e-a785-d51738b060da", "node_type": "4", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "1f3325f226dff4ac8184fc331b748e6cec0143d4505d6e76a46a7f1e2ccca4f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16bea74e-d745-4385-8e93-ba81d97521ae", "node_type": "1", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "15378bd4c1c8fc771d1dd5ca33fed8dba3e2ae107262e25c8d406865af72a521", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f734368-63a8-49e8-aa6d-5144d16d870a", "node_type": "1", "metadata": {}, "hash": "10d4b7c231cee000fc40d461c868e3ffba072141d24acd7c0e3f513465222de5", "class_name": "RelatedNodeInfo"}}, "text": "The limitations of this will be amplified for the users soon (except in the creative use case scenarios) but the LLMs are nevertheless very useful and a great human achievement. ", "start_char_idx": 13098, "end_char_idx": 13276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f734368-63a8-49e8-aa6d-5144d16d870a": {"__data__": {"id_": "5f734368-63a8-49e8-aa6d-5144d16d870a", "embedding": null, "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf024929-1f38-412e-a785-d51738b060da", "node_type": "4", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "1f3325f226dff4ac8184fc331b748e6cec0143d4505d6e76a46a7f1e2ccca4f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f369d03-c56c-409f-bc94-b4583df37422", "node_type": "1", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "22200c96519ce2689ac35ac489dd8ef311dd5194e62acd02bbbb94d719242ac8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ec38729-9d15-4e46-a2d1-da5c860414d2", "node_type": "1", "metadata": {}, "hash": "868d67cd90e75eb4e46f0b9914ad153ee67486c4b3a265df260b70f4f409b35d", "class_name": "RelatedNodeInfo"}}, "text": "The symbol manipulation approach comes from the deterministic mathematical world view of the 19th century. Unless it evolves to accommodate fuzziness and amasses the critical mass of the knowledge base, it will be inadequate too. But it will never hallucinate. There are also other tough philosophical and ethical chasms to cross for both the approaches. Thinking is not either one of pattern recognition or formal symbol manipulation. It is a synthesis of both. This is what I tried to apply in my attempt 10 years ago. (It was just the wrong timing as NLP capabilities were still primitive compared to today) Yejin Choi\u2019s speech on this idea is super compelling too. The world of common sensical, hallucination-free thinking machines perhaps is not too far away.\n\n", "start_char_idx": 13276, "end_char_idx": 14042, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ec38729-9d15-4e46-a2d1-da5c860414d2": {"__data__": {"id_": "2ec38729-9d15-4e46-a2d1-da5c860414d2", "embedding": null, "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf024929-1f38-412e-a785-d51738b060da", "node_type": "4", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "1f3325f226dff4ac8184fc331b748e6cec0143d4505d6e76a46a7f1e2ccca4f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f734368-63a8-49e8-aa6d-5144d16d870a", "node_type": "1", "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}, "hash": "ba02dc995af901e5d2969ded620276649d81220307a918babfa45b99d7cd837c", "class_name": "RelatedNodeInfo"}}, "text": "Disclaimer : I could be wrong here and I had been wrong before :)", "start_char_idx": 14042, "end_char_idx": 14107, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/metadata": {"a37a542d-341c-4467-8c66-f2a8f1e1b3b1": {"doc_hash": "9c5e70545c65d4c8363a8b70e4f57431b76c252baec7aea3d6b6eaf0e3ef8181", "ref_doc_id": "cf024929-1f38-412e-a785-d51738b060da"}, "a62ef461-d24f-4306-a2b9-d0a3fa446a65": {"doc_hash": "64b9205c08f9825f91a792636929604ece64a2d29112a8d194b729cbcb4b4782", "ref_doc_id": "cf024929-1f38-412e-a785-d51738b060da"}, "c728ca39-9028-4c9d-972f-ff80080fc9e5": {"doc_hash": "ff8b3c3cbbac16b253881c4538253c2cefefec23c1f196df621f802351b3ab95", "ref_doc_id": "cf024929-1f38-412e-a785-d51738b060da"}, "37871ead-d804-479d-9cac-44e08b9b54f7": {"doc_hash": "57d07b87d9dd8c4753f6201ac87f2c4bd8d2d3d7c4b509bd25e4af5edb131e86", "ref_doc_id": "cf024929-1f38-412e-a785-d51738b060da"}, "16bea74e-d745-4385-8e93-ba81d97521ae": {"doc_hash": "15378bd4c1c8fc771d1dd5ca33fed8dba3e2ae107262e25c8d406865af72a521", "ref_doc_id": "cf024929-1f38-412e-a785-d51738b060da"}, "3f369d03-c56c-409f-bc94-b4583df37422": {"doc_hash": "22200c96519ce2689ac35ac489dd8ef311dd5194e62acd02bbbb94d719242ac8", "ref_doc_id": "cf024929-1f38-412e-a785-d51738b060da"}, "5f734368-63a8-49e8-aa6d-5144d16d870a": {"doc_hash": "ba02dc995af901e5d2969ded620276649d81220307a918babfa45b99d7cd837c", "ref_doc_id": "cf024929-1f38-412e-a785-d51738b060da"}, "2ec38729-9d15-4e46-a2d1-da5c860414d2": {"doc_hash": "b044a36ebb53a399cbea6067d7c3ea445641c7f2690d83cc2bea845c23827ca0", "ref_doc_id": "cf024929-1f38-412e-a785-d51738b060da"}}, "docstore/ref_doc_info": {"cf024929-1f38-412e-a785-d51738b060da": {"node_ids": ["a37a542d-341c-4467-8c66-f2a8f1e1b3b1", "a62ef461-d24f-4306-a2b9-d0a3fa446a65", "c728ca39-9028-4c9d-972f-ff80080fc9e5", "37871ead-d804-479d-9cac-44e08b9b54f7", "16bea74e-d745-4385-8e93-ba81d97521ae", "3f369d03-c56c-409f-bc94-b4583df37422", "5f734368-63a8-49e8-aa6d-5144d16d870a", "2ec38729-9d15-4e46-a2d1-da5c860414d2"], "metadata": {"file_path": "data/thinking_machines.txt", "file_name": "thinking_machines.txt", "file_type": "text/plain", "file_size": 14173, "creation_date": "2024-05-26", "last_modified_date": "2024-05-26"}}}}